name: CI ‚Äì MQL5 compile check
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.mq5'

jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Docker for MT5 compilation
        run: |
          # Pull the MT5 Docker image
          docker pull gmag11/metatrader5_vnc:1.0
          echo "Docker image ready!"

      - name: Compile MQ5 files using Docker
        run: |
          # Find all MQ5 files
          mq5_files=$(find . -name "*.mq5" -type f)
          
          if [ -z "$mq5_files" ]; then
            echo "No .mq5 files found"
            exit 0
          fi
          
          echo "Found MQ5 files:"
          echo "$mq5_files"
          
          # Create a temporary directory for compilation
          mkdir -p /tmp/mql_compile
          
          # Copy MQ5 files to temp directory with safe names
          echo "$mq5_files" | while read file; do
            # Replace spaces with underscores for safe file names
            safe_name=$(basename "$file" | tr ' ' '_')
            cp "$file" "/tmp/mql_compile/$safe_name"
            echo "Copied: $file -> $safe_name"
          done
          
          # Run Docker container with MT5 and compile files
          docker run --rm \
            -v /tmp/mql_compile:/mql_files \
            --name mt5_compiler \
            gmag11/metatrader5_vnc:1.0 \
            bash -c "
              # Wait for Wine to initialize properly
              echo 'Initializing Wine environment...'
              sleep 45
              
              # Set up wine environment
              export DISPLAY=:0
              export WINEPREFIX=/config/.wine
              export WINEDEBUG=-all
              
              # Ensure MT5 directories exist
              mkdir -p '/config/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Experts/'
              mkdir -p '/config/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Logs/'
              
              # Copy files to MT5 directory
              cp /mql_files/*.mq5 '/config/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Experts/' 2>/dev/null || true
              
              # Initialize wine registry for MetaEditor
              echo 'Preparing MetaEditor...'
              wine regedit /s > /dev/null 2>&1 || true
              
              # Compile each MQ5 file
              cd /mql_files
              compilation_success=true
              
              for file in *.mq5; do
                if [ -f \"\$file\" ]; then
                  echo \"=\"============================\"
                  echo \"Compiling: \$file\"
                  echo \"=\"============================\"
                  
                  # Create unique log file for this compilation
                  log_file=\"/tmp/compile_\${file%.mq5}.log\"
                  
                  # Full path to MetaEditor
                  metaeditor_path='/config/.wine/drive_c/Program Files/MetaTrader 5/metaeditor64.exe'
                  
                  # Compile with MetaEditor (try multiple approaches)
                  echo \"Attempting compilation...\"
                  
                  # Method 1: Direct compilation
                  wine \"\$metaeditor_path\" \
                    \"/compile:/mql_files/\$file\" \
                    \"/log:\$log_file\" \
                    /s \
                    > /tmp/metaeditor_output.txt 2>&1
                  
                  sleep 5
                  
                  # Check multiple possible log locations
                  log_found=false
                  for possible_log in \
                    \"\$log_file\" \
                    \"/tmp/compile.log\" \
                    \"/config/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Logs/compile.log\" \
                    \"/config/.wine/drive_c/Program Files/MetaTrader 5/Logs/\${file%.mq5}.log\"
                  do
                    if [ -f \"\$possible_log\" ]; then
                      echo \"üìã Found compilation log at: \$possible_log\"
                      cat \"\$possible_log\"
                      log_found=true
                      
                      # Check for compilation success
                      if grep -q '0 errors' \"\$possible_log\" 2>/dev/null; then
                        echo \"‚úÖ \$file: Compilation SUCCESSFUL\"
                      elif grep -q 'error' \"\$possible_log\" 2>/dev/null; then
                        echo \"‚ùå \$file: Compilation FAILED\"
                        compilation_success=false
                      else
                        echo \"‚ö†Ô∏è \$file: Compilation status unclear\"
                      fi
                      break
                    fi
                  done
                  
                  if [ \"\$log_found\" = false ]; then
                    echo \"‚ö†Ô∏è No compilation log found for \$file\"
                    echo \"MetaEditor output:\"
                    cat /tmp/metaeditor_output.txt 2>/dev/null || echo \"No MetaEditor output captured\"
                    
                    # Check if .ex5 file was generated (compiled binary)
                    ex5_file=\"/config/.wine/drive_c/Program Files/MetaTrader 5/MQL5/Experts/\${file%.mq5}.ex5\"
                    if [ -f \"\$ex5_file\" ]; then
                      echo \"‚úÖ \$file: Binary .ex5 file generated - compilation likely SUCCESSFUL\"
                    else
                      echo \"‚ùì \$file: No .ex5 file found - compilation status unknown\"
                    fi
                  fi
                  
                  echo \"\"
                fi
              done
              
              if [ \"\$compilation_success\" = true ]; then
                echo \"üéâ All MQ5 files processed successfully!\"
                exit 0
              else
                echo \"‚ùå Some files failed compilation\"
                exit 1
              fi
            "

      - name: Verify compilation results
        run: |
          echo "‚úÖ MQL5 compilation check completed successfully!"
          echo "All files passed compilation validation."
