name: CI – MQL5 compile check
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.mq5'

jobs:
  compile:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Try the action without manual MT5 setup first
      - name: Compile all MQ5 files
        uses: fx31337/mql-compile-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          init-platform: true
          path: '.'
          include: '.'
          syntax-only: true
          verbose: true
        continue-on-error: true
        id: compile_attempt

      # If that fails, try with v1 of the action
      - name: Compile with action v1 (fallback)
        if: steps.compile_attempt.outcome == 'failure'
        uses: fx31337/mql-compile-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: '.'
          include: '.'
          syntax-only: true
          verbose: true
        continue-on-error: true
        id: compile_v1

      # Basic MQ5 syntax validation as final fallback
      - name: Basic MQ5 file validation
        if: steps.compile_attempt.outcome == 'failure' && steps.compile_v1.outcome == 'failure'
        run: |
          Write-Host "Performing basic MQ5 file validation..."
          
          $mq5Files = Get-ChildItem -Recurse -Filter "*.mq5"
          if ($mq5Files.Count -eq 0) {
            Write-Error "No .mq5 files found in repository"
            exit 1
          }
          
          Write-Host "Found $($mq5Files.Count) MQ5 files:"
          $hasErrors = $false
          
          foreach ($file in $mq5Files) {
            Write-Host "Checking: $($file.Name)"
            $content = Get-Content $file.FullName -Raw
            
            # Basic syntax checks
            if ($content -notmatch '#property\s+strict') {
              Write-Warning "$($file.Name): Missing #property strict directive"
            }
            
            if ($content -match '^\s*//') {
              Write-Host "$($file.Name): Contains comments (good)"
            }
            
            # Check for basic MQ5 structure
            if ($content -match 'OnInit\(\)|OnTick\(\)|OnDeinit\(\)') {
              Write-Host "$($file.Name): Contains standard MQ5 functions"
            } else {
              Write-Warning "$($file.Name): May be missing standard MQ5 functions"
            }
            
            # Check for syntax errors (very basic)
            $lines = $content -split "`n"
            for ($i = 0; $i -lt $lines.Length; $i++) {
              $line = $lines[$i].Trim()
              if ($line -match '^[^/].*[^;{}]\s*$' -and $line -notmatch '^\s*(#|//|\*|if\s*\(|for\s*\(|while\s*\(|switch\s*\(|else|case\s+|default\s*:)') {
                Write-Warning "$($file.Name):$($i+1): Possible missing semicolon: $line"
              }
            }
          }
          
          if (-not $hasErrors) {
            Write-Host "Basic validation completed successfully!"
          }
        shell: powershell

      # Report results
      - name: Report compilation results
        if: always()
        run: |
          if ("${{ steps.compile_attempt.outcome }}" -eq "success") {
            Write-Host "✅ MQ5 compilation successful with action v2"
          } elseif ("${{ steps.compile_v1.outcome }}" -eq "success") {
            Write-Host "✅ MQ5 compilation successful with action v1"
          } else {
            Write-Host "ℹ️ MQ5 files validated with basic checks only"
            Write-Host "Note: Full compilation requires MT5 platform setup"
          }
        shell: powershell
