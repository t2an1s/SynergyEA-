name: CI â€“ MQL5 compile check
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.mq5'

jobs:
  compile:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Option 1: Try with explicit MT5 directory structure
      - name: Compile all MQ5 files (Method 1)
        uses: fx31337/mql-compile-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          init-platform: true
          mt-path: ./mt5
          path: '.'
          include: '.'
          syntax-only: true
          verbose: true
        continue-on-error: true
        id: method1

      # Option 2: Fallback with different action version
      - name: Compile all MQ5 files (Method 2 - Fallback)
        if: steps.method1.outcome == 'failure'
        uses: fx31337/mql-compile-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          init-platform: true
          path: '.'
          include: '.'
          syntax-only: true
          verbose: true
        continue-on-error: true
        id: method2

      # Option 3: Manual MT5 setup if both fail
      - name: Download MT5 Platform (Manual Method)
        if: steps.method1.outcome == 'failure' && steps.method2.outcome == 'failure'
        run: |
          # Create directory structure
          mkdir -p mt5-platform
          cd mt5-platform
          
          # Download MT5 terminal
          Invoke-WebRequest -Uri "https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/mt5setup.exe" -OutFile "mt5setup.exe"
          
          # Install MT5 (silent installation)
          Start-Process -FilePath "./mt5setup.exe" -ArgumentList "/S" -Wait
          
          # Alternative: Download portable version
          # Invoke-WebRequest -Uri "https://github.com/EA31337/MT-Platforms/releases/download/5.0.37/mt-5.0.37-win64.zip" -OutFile "mt5.zip"
          # Expand-Archive -Path "mt5.zip" -DestinationPath "."
        shell: powershell

      # Option 4: Try compilation with manual setup
      - name: Compile MQ5 files (Manual Method)
        if: steps.method1.outcome == 'failure' && steps.method2.outcome == 'failure'
        run: |
          # Find all .mq5 files and attempt compilation
          Get-ChildItem -Recurse -Filter "*.mq5" | ForEach-Object {
            Write-Host "Found MQ5 file: $($_.FullName)"
            # Basic syntax validation (if MetaEditor is available)
            if (Test-Path "mt5-platform/MetaEditor64.exe") {
              & "mt5-platform/MetaEditor64.exe" /compile:"$($_.FullName)" /inc:"." /s
            } else {
              Write-Host "MetaEditor not found, skipping compilation for $($_.Name)"
            }
          }
        shell: powershell

      # Simple file check as final validation
      - name: Validate MQ5 files exist
        run: |
          $mq5Files = Get-ChildItem -Recurse -Filter "*.mq5"
          if ($mq5Files.Count -eq 0) {
            Write-Error "No .mq5 files found in repository"
            exit 1
          } else {
            Write-Host "Found $($mq5Files.Count) MQ5 files:"
            $mq5Files | ForEach-Object { Write-Host "  - $($_.Name)" }
          }
        shell: powershell
